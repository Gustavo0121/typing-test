name: Multiplataform GWA CI/CD    # Success run

on:
  pull_request:
    branches:
      - none
  push:
    branches:
      - none
    tags:
      - "*.*.*"

  workflow_dispatch:
    branches:
      - dev
      - main
    tags:
      - "*.*.*"

jobs:
  linters:
    name: Check Quality Assurance
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          python -m pip install --upgrade poetry pip
          poetry install

      - name: Lint with ruff
        run: |
          poetry run ruff check

  test:
    runs-on: ${{ matrix.os }}
    needs: [linters]
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install -U poetry pip
        poetry install

    - name: Test with pytest and generate coverage report
      run: |
        poetry run pytest -vv

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    needs: [test]
    steps:
    - uses: actions/checkout@master

    - name: Generate coverage report
      run: |
        pip install -U pip poetry
        poetry install
        poetry run pytest --cov=./ --cov-report=xml

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        fail_ci_if_error: true # optional (default = false)
        verbose: true # optional (default = false)

